#!/bin/sh
poll_interval=2
poll_url=192.168.1.1/api/monitoring/status
signal_bars_tag=SignalIcon
battery_percent_tag=BatteryPercent
charging_tag=BatteryStatus
net_type_tag=CurrentNetworkType

signal=0
battery=0
charging=0

cleanup() {
    ret=$?
    printf '\033[?25h\033[0m\n' # Show cursor, reset colour, newline
    trap - EXIT
    exit "$ret"
}
trap cleanup EXIT INT HUP TERM

get_xml_line() {
    # get_xml_line "$line" "tagname"
    line=${1##*<$2>}
    printf %s\\n "${line%%</$2>*}"
}

human_network_type() {
    if [ "$1" -lt 0 ]; then
        printf '??'
    elif [ "$1" -eq 0 ]; then
        printf '~~'
    elif [ "$1" -le 3 ]; then
        printf '2G'
    elif [ "$1" -le 18 ]; then
        printf '3G'
    elif [ "$1" -eq 19 ]; then
        printf '4G'
    else
        printf '??'
    fi
}

print_bar() {
    # print_bar label progress
    printf '\033[0;1m%-9s[\033[92m' "$1:"
    for x in $(seq 1 "$2"); do printf '#'; done
    printf '\033[91m'
    for x in $(seq "$2" 9); do printf '-'; done
    printf '\033[0;1m]'
}

printf '\033[?25l' # Hide cursor
clear

while :; do
    signal= battery= charging=
    raw=$(curl -s -- "$poll_url") || { sleep "$poll_interval"; continue; }
    while read line; do
        case "$line" in
            "<$signal_bars_tag>"*)
                signal=$(get_xml_line "$line" "$signal_bars_tag");;
            "<$battery_percent_tag>"*)
                battery=$(get_xml_line "$line" "$battery_percent_tag");;
            "<$charging_tag>"*)
                charging=$(get_xml_line "$line" "$charging_tag");;
            "<$net_type_tag>"*)
                net_type=$(human_network_type "$(get_xml_line "$line" "$net_type_tag")");;
        esac
    done << EOF
$raw
EOF
    # Don't print on bad xml payload
    [ -z "$signal" ] || [ -z "$battery" ] || [ -z "$charging" ] && { sleep "$poll_interval"; continue; }

    # Go to top left & print bars
    printf '\033[1;1H'
    print_bar Signal "$((signal * 2))"
    printf ' %s\n' "$net_type"
    print_bar Battery "$((battery / 10))"
    [ "$charging" != 0 ] && printf '\033[0m+'
    # No newline printed here, otherwise you have to resize the terminal to 3 lines long to see it properly!

    sleep "$poll_interval"
done
