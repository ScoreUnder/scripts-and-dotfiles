#!/bin/sh
# A "sensible" lock script that wraps i3lock and ensures that it is the only running instance.
# Takes an optional --suspend argument to suspend the system after locking.
# Tunes DPMS to turn screens off after 5 seconds of inactivity. (Resets to 10 minutes after unlocking.)
LOCKFILE="/tmp/screen-lock-$DISPLAY"
exec 6>"$LOCKFILE"
flock -n 6 || exit

suspend=false
[ "$1" = --suspend ] && suspend=true

dpms_hack=
cleanup() {
    kill "$dpms_hack"
    rm -- "$LOCKFILE"
    xset dpms 600 600 600
    dunstctl set-paused false
}
trap cleanup EXIT
trap 'exit 1' INT HUP TERM

if $suspend; then
    {
        sleep 2
        if command -v systemctl >/dev/null; then
            systemctl suspend
        else
            sudo suspend-to-disk
        fi
    } &
fi

xset dpms 5 5 5
dunstctl set-paused true

# DPMS is fucked for some reason
{
    while sleep 5; do
        if [ "$(xprintidle)" -ge 5000 ]; then
            xset dpms force off
        fi
    done
} & dpms_hack=$!

i3lock -fenc 000000
