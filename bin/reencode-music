#!/bin/sh
_prog_name=${0##*/}
die() { printf "%s: %s\n" "$_prog_name" "$*" >&2; exit 1; }
[ "$#" != 0 ] || die "Need a dir to transcode"

reencode_file() {
    file=$1
    fbase=${file##*/}
    [ "$fbase" = . -o "$fbase" = .. ] && return
    [ -e "$file" ] || return

    case ${fbase##*.} in
        (flac) exec ffmpeg -hide_banner -nostdin -y -loglevel warning -i "$file" -c:a opus -b:a 160k -vn "$base/${fbase%.flac}.ogg";;
        (m3u|m3u8|fpl|cue|log) ;;  # skip
        (*) exec cp -r --reflink=auto "$file" "$base/$fbase";;
    esac
}

if [ "$1" = --single-internal ]; then
    shift
    reencode_file "$@"
    exit
fi

for dir do
    [ -r "$dir" ] || die "No read access: $dir"
    [ -d "$dir" ] || die "Not a directory: $dir"
    export base="$(basename -- "$dir")"
    mkdir -p -- "$base"
    parallel -q --bar "$0" --single-internal {} ::: "$dir"/* "$dir"/.* </dev/null
    result=$?
    if [ "$result" -ne 0 ]; then
        printf 'Parallel died with exit code %s when processing dir %s\n' "$result" "$dir" >&2
    fi
done
